// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using educapass_api.Db;

#nullable disable

namespace educapass_api.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20240831144418_Aluno")]
    partial class Aluno
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("educapass_api.Models.AlunoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Clase_id")
                        .HasColumnType("integer");

                    b.Property<string>("ContatoResponsavel")
                        .HasColumnType("text");

                    b.Property<string>("Cpf")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Escola_id")
                        .HasColumnType("integer");

                    b.Property<string>("Inscricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("NumeroChamada")
                        .HasColumnType("integer");

                    b.Property<string>("Responsavel")
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.Property<int?>("TotalFalta")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Clase_id");

                    b.HasIndex("Escola_id");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("educapass_api.Models.ClaseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("Escola_id")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Escola_id");

                    b.ToTable("Clase");
                });

            modelBuilder.Entity("educapass_api.Models.EscolaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cep")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Endereco")
                        .HasColumnType("text");

                    b.Property<string>("Logo")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Escola");
                });

            modelBuilder.Entity("educapass_api.Models.AlunoModel", b =>
                {
                    b.HasOne("educapass_api.Models.ClaseModel", "Clase")
                        .WithMany("Aluno")
                        .HasForeignKey("Clase_id");

                    b.HasOne("educapass_api.Models.EscolaModel", "Escola")
                        .WithMany("Aluno")
                        .HasForeignKey("Escola_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clase");

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("educapass_api.Models.ClaseModel", b =>
                {
                    b.HasOne("educapass_api.Models.EscolaModel", "Escola")
                        .WithMany("Clase")
                        .HasForeignKey("Escola_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("educapass_api.Models.ClaseModel", b =>
                {
                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("educapass_api.Models.EscolaModel", b =>
                {
                    b.Navigation("Aluno");

                    b.Navigation("Clase");
                });
#pragma warning restore 612, 618
        }
    }
}
